services:
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: marcador_db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${SA_PASSWORD}
    ports:
      - "1433:1433"
    volumes:
      - ./db:/db
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost,1433", "-C", "-U", "sa", "-P", "${SA_PASSWORD}", "-Q", "SELECT 1"]
      interval: 5s
      timeout: 5s
      retries: 30
    profiles: ["db", "all"]
    networks:
      - marcador_network

  db_init:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: marcador_db_init
    depends_on:
      db:
        condition: service_healthy
    environment:
      - SA_PASSWORD=${SA_PASSWORD}
    volumes:
      - ./db:/db
      - ./scripts:/scripts
    entrypoint: ["/bin/bash","-c","/scripts/db-init.sh"]
    restart: "no"
    profiles: ["db", "all"]
    networks:
      - marcador_network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: marcador_api
    depends_on:
      db:
        condition: service_healthy
      db_init:
        condition: service_completed_successfully
    environment:
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - DB_CONNECTION_STRING=Server=db,1433;Database=${DB_NAME};User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=True;
      - Jwt__Key=${JWT_KEY}
    expose:
      - "8080"
    profiles: ["api", "all"]
    networks:
      - marcador_network

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: marcador_ui
    depends_on:
      api:
        condition: service_started   
    restart: unless-stopped          
    expose:
      - "80"
    profiles: ["ui", "all"]
    networks:
      - marcador_network

  proxy:
    image: caddy:2-alpine
    container_name: marcador_proxy
    depends_on:
      ui:
        condition: service_started
      api:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Proxy/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - marcador_network
    profiles: ["caddy"]

  proxy_nginx:
    image: nginx:alpine
    container_name: marcador_proxy_nginx
    depends_on:
      ui:
        condition: service_started
      api:
        condition: service_started
    ports:
      - "80:80"
      - "443:443"  # se activar√° tras instalar certificados y cambiar a config HTTPS
    volumes:
      - ./Proxy/nginx.http.conf:/etc/nginx/conf.d/default.conf:ro
      - certbot-www:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    networks:
      - marcador_network
    profiles: ["all"]

  certbot:
    image: certbot/certbot:latest
    container_name: marcador_certbot
    volumes:
      - certbot-www:/var/www/certbot
      - certbot-etc:/etc/letsencrypt
    networks:
      - marcador_network
    profiles: ["all"]

networks:
  marcador_network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  certbot-www:
  certbot-etc:
